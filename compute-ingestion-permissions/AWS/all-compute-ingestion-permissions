## All custom Compute ingestion permissions in a single policy
## Note than the AWS managed policy "AWSLambdaReadOnlyAccess" would also need assigned along with these permissions

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "VisualEditor0",
      "Effect": "Allow",
      "Action": [
        "apigateway:GET",
        "cloudfront:ListDistributions",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetEventSelectors",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricData",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:CreateSecurityGroup",
        "ec2:CreateTags",
        "ec2:DeleteSecurityGroup",
        "ec2:DescribeInstances",
        "ec2:DescribeImages",
        "ec2:DescribeSecurityGroups",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RunInstances",
        "ec2:TerminateInstances",
        "ecr:DescribeRepositories",
        "ecs:ListContainerInstances",
        "ecs:DescribeClusters",
        "config:DescribeConfigurationRecorders",
        "config:DescribeConfigurationRecorderStatus",
        "ecs:ListClusters",
        "ecr:GetAuthorizationToken",
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:GetRepositoryPolicy",
        "ecr:DescribeRepositories",
        "ecr:ListImages",
        "ecr:DescribeImages",
        "ecr:BatchGetImage",
        "eks:DescribeCluster",
        "eks:ListClusters",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeTargetGroups",
        "events:ListRules",
        "iam:GetAccountSummary",
        "iam:GetCredentialReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:ListUsers",
        "iam:SimulatePrincipalPolicy",
        "iam:GenerateCredentialReport",
        "iam:GetAccountPasswordPolicy",
        "iam:ListAttachedRolePolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListPolicies",
        "iam:ListRolePolicies",
        "iam:ListVirtualMFADevices",
        "kms:ListKeys",
        "kms:ListAliases",
        "lambda:GetFunction",
        "lambda:GetPolicy",
        "lambda:ListFunctions",
        "lambda:ListAliases",
        "lambda:ListEventSourceMappings",
        "logs:DescribeSubscriptionFilters",
        "lambda:PublishLayerVersion",
        "lambda:UpdateFunctionConfiguration",
        "lambda:GetLayerVersion",
        "lambda:GetFunctionConfiguration",
        "logs:DescribeMetricFilters",
        "s3:GetBucketAcl",
        "s3:GetBucketPolicy",
        "s3:GetBucketNotification",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:ListAllMyBuckets",
        "sns:ListSubscriptions"
      ],
      "Resource": "*"
    },
    {
            "Sid": "VisualEditor1",
            "Effect": "Allow",
            "Action": [
                "sns:ListSubscriptionsByTopic",
                "kms:GetKeyRotationStatus",
                "cloudtrail:GetTrailStatus",
                "iam:ListAttachedUserPolicies",
                "iam:ListUserPolicies"
            ],
            "Resource": [
                "arn:aws:iam::*:user/*",
                "arn:aws:cloudtrail:*:*:trail/*",
                "arn:aws:kms:*:*:key/*",
                "arn:aws:sns:*:*:*"
            ]
        }
  ]
}